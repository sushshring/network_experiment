
@inproceedings{bates_detecting_2012,
	address = {New York, NY, USA},
	series = {{CCSW} '12},
	title = {Detecting {Co}-residency with {Active} {Traffic} {Analysis} {Techniques}},
	isbn = {978-1-4503-1665-1},
	url = {http://doi.acm.org/10.1145/2381913.2381915},
	doi = {10.1145/2381913.2381915},
	booktitle = {Proceedings of the 2012 {ACM} {Workshop} on {Cloud} {Computing} {Security} {Workshop}},
	publisher = {ACM},
	author = {Bates, Adam and Mood, Benjamin and Pletcher, Joe and Pruse, Hannah and Valafar, Masoud and Butler, Kevin},
	year = {2012},
	keywords = {cloud security, covert channel, traffic analysis},
	pages = {1--12}
}

@techreport{mell_nist_2011,
	title = {The {NIST} definition of cloud computing},
	url = {https://doi.org/10.6028/nist.sp.800-145},
	institution = {National Institute of Standards and Technology},
	author = {Mell, P. M. and Grance, T.},
	year = {2011},
	doi = {10.6028/nist.sp.800-145}
}

@incollection{zhang_comprehensive_2016,
	title = {A {Comprehensive} {Study} of {Co}-residence {Threat} in {Multi}-tenant {Public} {PaaS} {Clouds}},
	url = {http://link.springer.com/10.1007/978-3-319-50011-9\_28},
	booktitle = {A {Comprehensive} {Study} of {Co}-residence {Threat} in {Multi}-tenant {Public} {PaaS} {Clouds}},
	author = {Zhang, Weijuan and Jia, Xiaoqi and Wang, Chang and Zhang, Shengzhi and Huang, Qingjia and Wang, Mingsheng and Liu, Peng},
	year = {2016},
	doi = {10.1007/978-3-319-50011-9_28},
	pages = {361--375}
}

@inproceedings{yarom_flush+_2014,
	title = {{FLUSH}+ {RELOAD}: {A} {High} {Resolution}, {Low} {Noise}, {L}3 {Cache} {Side}-{Channel} {Attack}.},
	volume = {1},
	booktitle = {{USENIX} {Security} {Symposium}},
	author = {Yarom, Yuval and Falkner, Katrina},
	year = {2014},
	pages = {22--25}
}

@inproceedings{varadarajan_placement_nodate,
	title = {A {Placement} {Vulnerability} {Study} in {Multi}-{Tenant} {Public} {Clouds}},
	abstract = {Public infrastructure-as-a-service clouds, such as Amazon EC2, Google Compute Engine (GCE) and Microsoft Azure allow clients to run virtual machines (VMs) on shared phys- ical infrastructure. This practice of multi-tenancy brings economies of scale, but also introduces the risk of sharing a physical server with an arbitrary and potentially malicious VM. Past works have demonstrated how to place a VM alongside a target victim (co-location) in early-generation clouds and how to extract secret information via side- channels. Although there have been numerous works on side-channel attacks, there have been no studies on place- ment vulnerabilities in public clouds since the adoption of stronger isolation technologies such as Virtual Private Clouds (VPCs).
We investigate this problem of placement vulnerabili- ties and quantitatively evaluate three popular public clouds for their susceptibility to co-location attacks. We find that adoption of new technologies (e.g., VPC) makes many prior attacks, such as cloud cartography, ineffective. We find new ways to reliably test for co-location across Amazon EC2, Google GCE, and Microsoft Azure. We also find ways to detect co-location with victim web servers in a multi-tiered cloud application located behind a load balancer.
We use our new co-residence tests and multiple customer accounts to launch VM instances under different strategies that seek to maximize the likelihood of co-residency. We find that it is much easier (10× higher success rate) and cheaper (up to \$114 less) to achieve co-location in these three clouds when compared to a secure reference placement policy.},
	language = {en-US},
	author = {Varadarajan, Venkatanathan and Zhang, Yinqian and Ristenpart, Thomas and Swift, Michael},
	file = {Varadarajan et al. - A Placement Vulnerability Study in Multi-Tenant Pu.pdf:/Users/sps5394/Zotero/storage/8GBFW5SL/Varadarajan et al. - A Placement Vulnerability Study in Multi-Tenant Pu.pdf:application/pdf}
}

@misc{columbus_roundup_2018,
	title = {Roundup {Of} {Cloud} {Computing} {Forecasts} {And} {Market} {Estimates}, 2018},
	url = {https://www.forbes.com/sites/louiscolumbus/2018/09/23/roundup-of-cloud-computing-forecasts-and-market-estimates-2018/},
	abstract = {The Worldwide Public Cloud Services Market is projected to grow by 17.3\% in 2019 to total \$206.2B, up from \$175.8B in 2018 according to Gartner. More than \$1.3T in IT spending will be directly or indirectly affected by the shift to cloud by 2022},
	language = {en},
	urldate = {2019-01-17TZ},
	journal = {Forbes},
	author = {Columbus, Louis},
	month = sep,
	year = {2018}
}

@misc{citation_needed,
	title = {Citation Needed},
	url = {http://xkcd.com/},
	language = {en},
	author = {CitationNeeded}
}

@misc{costello_gartner_2018,
	title = {Gartner {Forecasts} {Worldwide} {Public} {Cloud} {Revenue} to {Grow} 17.3 {Percent} in 2019},
	url = {https://www.gartner.com/en/newsroom/press-releases/2018-09-12-gartner-forecasts-worldwide-public-cloud-revenue-to-grow-17-percent-in-2019},
	abstract = {The worldwide public cloud services market is projected to grow 17.3 percent in 2019 to total \$206.2 billion, up from \$175.8 billion in 2018, according to Gartner, Inc. In 2018, Gartner forecasts that the market will grow 21 percent, up from \$145.3 billion in 2017.},
	language = {en},
	urldate = {2019-01-17TZ},
	journal = {Gartner Newsroom},
	author = {Costello, Katie and Hippold, Sarah},
	month = sep,
	year = {2018}
}

@article{armbrust_above_2009,
	title = {Above the {Clouds}: {A} {Berkeley} {View} of {Cloud} {Computing}},
	author = {Armbrust, Michael and Fox, Armando and Griffith, Rean and Joseph, Anthony D and Katz, Randy H and Konwinski, Andrew and Lee, Gunho and Patterson, David A and Rabkin, Ariel and Stoica, Ion and {others}},
	year = {2009}
}

@article{mell_nist_2011-1,
	title = {The {NIST} definition of cloud computing},
	author = {Mell, Peter and Grance, Tim and {others}},
	year = {2011}
}

@article{yu_security-awareness_2014,
	title = {A {Security}-{Awareness} {Virtual} {Machine} {Management} {Scheme} {Based} on {Chinese} {Wall} {Policy} in {Cloud} {Computing}},
	volume = {2014},
	url = {http://dx.doi.org/10.1155/2014/805923},
	journal = {The Scientific World Journal},
	author = {Yu, Si and Gui, Xiaolin and Lin, Jiancai and Tian, Feng and Zhao, Jianqiang and Dai, Min},
	year = {2014},
	pages = {12}
}

@inproceedings{raj_resource_2009,
	address = {New York, NY, USA},
	series = {{CCSW} '09},
	title = {Resource {Management} for {Isolation} {Enhanced} {Cloud} {Services}},
	isbn = {978-1-60558-784-4},
	url = {http://doi.acm.org/10.1145/1655008.1655019},
	doi = {10.1145/1655008.1655019},
	booktitle = {Proceedings of the 2009 {ACM} {Workshop} on {Cloud} {Computing} {Security}},
	publisher = {ACM},
	author = {Raj, Himanshu and Nathuji, Ripal and Singh, Abhishek and England, Paul},
	year = {2009},
	keywords = {cache coloring, cache isolation, isolation attributes},
	pages = {77--84}
}

@inproceedings{verma_large-scale_2015,
	address = {Bordeaux, France},
	title = {Large-scale cluster management at {Google} with {Borg}},
	booktitle = {Proceedings of the {European} {Conference} on {Computer} {Systems} ({EuroSys})},
	author = {Verma, Abhishek and Pedrosa, Luis and Korupolu, Madhukar R. and Oppenheimer, David and Tune, Eric and Wilkes, John},
	year = {2015}
}

@article{noauthor_notitle_nodate
}

@inproceedings{remesh_babu_secure_2016,
	title = {Secure cloud multi-tenant applications with cache in {PaaS}},
	volume = {424},
	isbn = {978-3-319-28030-1},
	doi = {10.1007/978-3-319-28031-8_2},
	abstract = {Multi-tenant applications come into existence in clouds, which aims “better resource utilization” for application provider. Today most of the present application optimizations are based on Service Level Agreements which focuses on virtual machine (VM) based computing service, while other services such as storage and cache are often neglected. This paper mainly focuses on cache based approach for multi-tenant application on PaaS. Currently in multi-tenant cloud applications data are often evicted mistakenly by cache service, which is managed by existing algorithms such as LRU. It keeps the query information to reload the evicted data from storage which might be sensitive. Hence there is a possibility of data breach when these data are accessed improperly by other tenants. For faster access caching of the data is common in cloud based applications while the security is an important area that should not be neglected when these systems uses other third party systems/networks as caching servers. Also security of the tenant's data/information is also a crucial component of the SLA between cloud service provider and tenant. So this paper proposes a DES based information security framework within Plat- form as a Service (PaaS) for better security and Quality of Service (QoS). Keywords},
	booktitle = {Advances in {Intelligent} {Systems} and {Computing}},
	author = {Remesh Babu, K. R. and Saranya, S. and Samuel, Philip},
	year = {2016},
	keywords = {Cache protection, Cloud computing, Multi-tenant, Qos},
	pages = {15--27}
}

@article{xu_towards_2007,
	title = {Towards a {VMM}-based usage control framework for {OS} kernel integrity protection},
	url = {http://portal.acm.org/citation.cfm?doid=1266840.1266852},
	doi = {10.1145/1266840.1266852},
	abstract = {Protecting kernel integrity is one of the fundamental security objectives in building a trustworthy operating system (OS). For this end, a variety of approaches and systems have been proposed and developed. However, access control models used in most of these systems are not expressive enough to capture important security requirements such as continuous policy enforcement and mutable process and object attributes. Even worse, most existing protection mechanisms in these systems reside in the same space as the running OS, which unfortunately can be disabled or subverted after an attacker successfully exploits kernel-level vulnerabilities (or features) to compromise the OS kernel. The increasing number of kernel-level root kit attacks clearly demonstrates this threat.},
	journal = {Proceedings of the 12th ACM symposium on Access control models and technologies - SACMAT '07},
	author = {Xu, Min and Jiang, Xuxian and Sandhu, Ravi and Zhang, Xinwen},
	year = {2007},
	keywords = {access control, authorization, kernel integrity, operating sys-, security architecture, tem protection, ucon, usage control, vmm},
	pages = {71}
}

@article{jones_vmm-based_2008,
	title = {{VMM}-based hidden process detection and identification using {Lycosid}},
	url = {http://portal.acm.org/citation.cfm?doid=1346256.1346269},
	doi = {10.1145/1346256.1346269},
	abstract = {Use of stealth rootkit techniques to hide long-lived malicious processes is a current and alarming security issue. In this paper, we describe, implement, and evaluate a novel VMM-based hidden process detection and identification service called Lycosid that is based on the cross-view validation principle. Like previous VMM-based security services, Lycosid benefits from its protected location. In contrast top revious VMM-based hidden process detectors, Lycosid obtains guest process information implicitly. Using implicit information reduces its susceptibility to guest evasion attacks and decouples it from specific guest operating system versions and patch levels. The implicit information Lycosid depends on, however, can be noisy and unreliable. Statistical inference techniques like hypothesis testing and line arregression allow Lycosid to trade time for accuracy. Despite low quality inputs, Lycosid provides a robust, highly accurate service usable even insecurity environments where the consequences for wrong decisions can behig.},
	journal = {Proceedings of the fourth ACM SIGPLAN/SIGOPS international conference on Virtual execution environments - VEE '08},
	author = {Jones, Stephen T. and Arpaci-Dusseau, Andrea C. and Arpaci-Dusseau, Remzi H.},
	year = {2008},
	keywords = {4, 6, d, design, inference, measurement, security, security and protec-, virtual machine},
	pages = {91}
}

@inproceedings{zhang_cross-tenant_2014,
	title = {Cross-{Tenant} {Side}-{Channel} {Attacks} in {PaaS} {Clouds}},
	isbn = {978-1-4503-2957-6},
	url = {http://dl.acm.org/citation.cfm?doid=2660267.2660356},
	doi = {10.1145/2660267.2660356},
	abstract = {We present a new attack framework for conducting cache-based side-channel attacks and demonstrate this framework in attacks between tenants on commercial Platform-as-a-Service (PaaS) clouds. Our framework uses the FLUSH-RELOAD attack of Gullasch et al. as a primitive, and extends this work by leveraging it within an automaton-driven strategy for tracing a victim's execution. We leverage our framework first to confirm co-location of tenants and then to extract secrets across tenant boundaries. We specifically demonstrate attacks to collect potentially sensitive application data (e.g., the number of items in a shopping cart), to hijack user accounts, and to break SAML single sign-on. To the best of our knowledge, our attacks are the first granular, cross-tenant, side-channel attacks successfully demonstrated on state-of-the-art commercial clouds, PaaS or otherwise.},
	booktitle = {Proceedings of the 2014 {ACM} {SIGSAC} {Conference} on {Computer} and {Communications} {Security} - {CCS} '14},
	author = {Zhang, Yinqian and Juels, Ari and Reiter, Michael K. and Ristenpart, Thomas},
	year = {2014},
	pages = {990--1003}
}

@article{paul_a._karger_vmm_1990,
	title = {A {VMM} {Security} {Kernel} for the {VAX} {Architecture}},
	issn = {1742-4658},
	url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.86.6423%5Cnhttp://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=63834},
	doi = {10.1109/RISP.1990.63834},
	abstract = {The development of a virtual-machine monitor (VMM) security kernel\${\textbackslash}backslash\$nfor the VAX architecture is described. Particular focus is on how the\${\textbackslash}backslash\$nsystem's hardware, microcode, and software are aimed at meeting A1-level\${\textbackslash}backslash\$nsecurity requirements while maintaining the standard interfaces and\${\textbackslash}backslash\$napplications of the VMS and ULTRIX-32 operating systems. The VAX\${\textbackslash}backslash\$nsecurity kernel supports multiple concurrent virtual machines on a\${\textbackslash}backslash\$nsingle VAX system, providing isolation and controlled sharing of\${\textbackslash}backslash\$nsensitive data. Rigorous engineering standards were applied during\${\textbackslash}backslash\$ndevelopment to comply with the assurance requirements for verification\${\textbackslash}backslash\$nand configuration management. The VAX security kernel was developed with\${\textbackslash}backslash\$na heavy emphasis on performance and on system management tools. The\${\textbackslash}backslash\$nkernel performs sufficiently well that all of its development can be now\${\textbackslash}backslash\$ncarried out in virtual machines running on the kernel itself, rather\${\textbackslash}backslash\$nthan in a conventional time-sharing system},
	journal = {Proceedings. 1990 IEEE Computer Society Symposium on Research in Security and Privacy},
	author = {Paul A. Karger, Mary Ellen Zurko and Karger, P.a. and Zurko, M.E. and Bonin, D.W. and Mason, a H. and Kahn, C.E.},
	year = {1990},
	pmid = {21352491},
	pages = {2--19}
}

@article{wang_tenantguard:_2017,
	title = {{TenantGuard}: {Scalable} {Runtime} {Verification} of {Cloud}-{Wide} {VM}-{Level} {Network} {Isolation}},
	url = {http://users.encs.concordia.ca/ su_majum/papers/tenantguard-author.pdf},
	doi = {10.14722/ndss.2017.23365},
	abstract = {—Multi-tenancy in the cloud usually leads to security concerns over network isolation around each cloud tenant's virtual resources. However, verifying network isolation in cloud virtual networks poses several unique challenges. The sheer size of virtual networks implies a prohibitive complexity, whereas the constant changes in virtual resources demand a short re-sponse time. To make things worse, such networks typically allow fine-grained (e.g., VM-level) and distributed (e.g., security groups) network access control. Those challenges can either invalidate existing approaches or cause an unacceptable delay which prevents runtime applications. In this paper, we present TenantGuard, a scalable system for verifying cloud-wide, VM-level network isolation at runtime. We take advantage of the hierarchical nature of virtual networks, efficient data structures, incremental verification, and parallel computation to reduce the performance overhead of security verification. We implement our approach based on OpenStack and evaluate its performance both in-house and on Amazon EC2, which confirms its scalability and efficiency (13 seconds for verifying 168 millions of VM pairs). We further integrate TenantGuard with Congress, an OpenStack policy service, to verify compliance with respect to isolation requirements based on tenant-specific high-level security policies.},
	number = {March},
	journal = {Ndss},
	author = {Wang, Yushun and Madi, Taous and Majumdar, Suryadipta and Jarraya, Yosr and Alimohammadifar, Amir and Pourzandi, Makan and Wang, Lingyu and Debbabi, Mourad},
	year = {2017}
}

@inproceedings{gao_containerleaks:_2017,
	title = {{ContainerLeaks}: {Emerging} {Security} {Threats} of {Information} {Leakages} in {Container} {Clouds}},
	isbn = {978-1-5386-0542-4},
	url = {http://ieeexplore.ieee.org/document/8023126/},
	doi = {10.1109/DSN.2017.49},
	booktitle = {2017 47th {Annual} {IEEE}/{IFIP} {International} {Conference} on {Dependable} {Systems} and {Networks} ({DSN})},
	publisher = {IEEE},
	author = {Gao, Xing and Gu, Zhongshu and Kayaalp, Mehmet and Pendarakis, Dimitrios and Wang, Haining},
	month = jun,
	year = {2017},
	pages = {237--248}
}

@article{sailer_building_2005,
	title = {Building a {MAC}-based security architecture for the {Xen} open-source hypervisor},
	volume = {2005},
	issn = {10639527},
	doi = {10.1109/CSAC.2005.13},
	abstract = {We present the sHype hypervisor security architecture and examine in detail its mandatory access control facilities. While existing hypervisor security approaches aiming at high assurance have been proven useful for high-security environments that prioritize security over performance and code reuse, our approach aims at commercial security where near-zero performance overhead, non-intrusive implementation, and usability are of paramount importance. sHype enforces strong isolation at the granularity of a virtual machine, thus providing a robust foundation on which higher software layers can enact finer-grained controls. We provide the rationale behind the sHype design and describe and evaluate our implementation for the Xen open-source hypervisor},
	number = {i},
	journal = {Proceedings - Annual Computer Security Applications Conference, ACSAC},
	author = {Sailer, Reiner and Jaeger, Trent and Valdez, Enriquillo and Cáceres, Ramón and Perez, Ronald and Berger, Stefan and Griffin, John Linwood and Van Doorn, Leendert},
	year = {2005},
	pages = {276--285}
}

@article{xu_measurement_2015,
	title = {A {Measurement} {Study} on {Co}-residence {Threat} inside the {Cloud}},
	url = {https://www.usenix.org/conference/usenixsecurity15/technical-sessions/presentation/xu},
	abstract = {As the most basic cloud service model, Infrastructure as a Service (IaaS) has been widely used for serving the evergrowing computing demand due to the prevalence of the cloud. Using pools of hypervisors within the cloud, IaaS can support a large number of Virtual Machines (VMs) and scale services in a highly dynamic manner. However, it is well-known that the VMs in IaaS are vulnerable to co-residence threat, which can be easily exploited to launch different malicious attacks. In this measurement study, we investigate how IaaS evolves in VM placement, network management, and Virtual Private Cloud (VPC), as well as the impact upon co-residence. Specifically, through intensive measurement probing, we first profile the dynamic environment of cloud instances inside the cloud. Then using real experiments, we quantify the impacts of VM placement and network management upon co-residence. Moreover, we explore VPC, which is a defensive network-based service of Amazon EC2 for security enhancement, from the routing perspective. On one hand, our measurement shows that VPC is widely used and can indeed suppress co-residence threat. On the other hand, we demonstrate a new approach to achieving co-residence in VPC, indicating that co-residence threat still exists in the cloud.},
	journal = {24th USENIX Security Symposium (USENIX Security 15)},
	author = {Xu, Zhang and Wang, Haining and Wu, Zhenyu},
	year = {2015},
	pages = {929--944}
}

@article{sefraoui_openstack:_2012,
	title = {{OpenStack}: {Toward} an {Open}-source {Solution} for {Cloud} {Computing}},
	volume = {55},
	issn = {09758887},
	url = {http://research.ijcaonline.org/volume55/number3/pxc3882991.pdf},
	doi = {10.5120/8738-2991},
	abstract = {Cloud computing is a quite new concept for which the resources are virtualized, dynamically extended and provided as a service on the Internet. In this paper, we present a comparative study between some of the IaaS (Infrastructure as a Service) commonly used to select the best suited one for deployment and research development in the field of cloud computing. The aim is to provide the computer industry with the opportunity to build a hosting architecture, massively scalable which is completely open source, while overcoming the constraints and the use of proprietary technologies. Then, we present the solution OpenStack retained by the comparative study. We discuss in detail its functional and architectural system. We finish by a discussion of the motivation of our choice of the IaaS solution.},
	number = {3},
	journal = {International Journal of Computer Applications},
	author = {Sefraoui, Omar and Aissaoui, Mohammed and Eleuldj, Mohsine},
	year = {2012},
	keywords = {eucalyptus, iaas, opencloud, opennebula, openstack, scalableifx, virtualization},
	pages = {38--42}
}

@inproceedings{sprabery_scheduling_2018,
	title = {Scheduling, {Isolation}, and {Cache} {Allocation}: {A} {Side}-{Channel} {Defense}},
	isbn = {978-1-5386-5008-0},
	url = {https://ieeexplore.ieee.org/document/8360310/},
	doi = {10.1109/IC2E.2018.00025},
	booktitle = {2018 {IEEE} {International} {Conference} on {Cloud} {Engineering} ({IC}2E)},
	publisher = {IEEE},
	author = {Sprabery, Read and Evchenko, Konstantin and Raj, Abhilash and Bobba, Rakesh B. and Mohan, Sibin and Campbell, Roy},
	month = apr,
	year = {2018},
	pages = {34--40}
}

@inproceedings{bazm_side-channels_2017,
	title = {Side-channels beyond the cloud edge: {New} isolation threats and solutions},
	volume = {2017-Janua},
	isbn = {978-1-5386-1332-0},
	url = {http://ieeexplore.ieee.org/document/8241986/},
	doi = {10.1109/CSNET.2017.8241986},
	abstract = {Fog and edge computing leverage resources of end users and edge devices rather than centralized clouds. Isolation is a core security challenge for such paradigms: just like traditional clouds, fog and edge infrastructures are based on virtualization to share physical resources among several self-contained execution environments like virtual machines and containers. Yet, isolation may be threatened due to side-channels, created by the virtualization layer or due to the sharing of physical resources like the processor. Side-channel attacks (SCAs) exploit and use such leaky channels to obtain sensitive data. This paper aims to clarify the nature of this threat for fog and edge infrastructures. Current SCAs are local and exploit isolation challenges of virtualized environments to retrieve sensitive information. We introduce a new concept of distributed side-channel attack (DSCA) that is based on coordinating local attack techniques. We explore how such attacks can threaten isolation of any virtualized environments such as fog and edge computing. Finally, we study a set of different applicable countermeasures for attack mitigation.},
	booktitle = {2017 1st {Cyber} {Security} in {Networking} {Conference}, {CSNet} 2017},
	publisher = {IEEE},
	author = {Bazm, Mohammad Mahdi and Lacoste, Marc and Südholt, Mario and Menaud, Jean Marc},
	month = oct,
	year = {2017},
	keywords = {cloud security, decentralized cloud infrastructures, distributed side-channel attacks, isolation, moving target defense, side-channel attacks},
	pages = {1--8}
}

@inproceedings{hahn_development_2014,
	title = {Development and evaluation of a multi-tenant service middleware {PaaS} solution},
	isbn = {978-1-4799-7881-6},
	doi = {10.1109/UCC.2014.37},
	abstract = {In many modern systems, applications or services are realized as compositions of multiple existing services that can be enacted by Service Composition Engines (SCEs), which provide the required functionality to enable their definition and execution. SCEs typically use the capabilities of an Enterprise Service Bus (ESB) which serves as the messaging hub between the composed services aiming at ensuring their integration. Together, an SCE and ESB solution comprise the service middleware required for the definition and execution of service-based composite applications. Offering a service middleware solution as a service creates a PaaS offering that allows the service consumers to share the service middleware solution in a multi-tenant manner. However, multi-tenancy support for service middleware solutions remains an open issue. For this purpose, in this work we introduce a general architecture for the realization of a multi-tenant service middleware PaaS solution. This architecture is prototypically realized based on open-source, multi-tenant ESB and SCE solutions. The resulting service middleware provides configurability for service compositions, tenant-aware messaging, and tenant-based administration and management of the SCE and the ESB. We also present an empirical evaluation of the multi-tenant service middleware with focus on the SCE. The results of these experiments show a performance degradation within acceptable limits when scaling the number of tenants and tenant users.},
	booktitle = {Proceedings - 2014 {IEEE}/{ACM} 7th {International} {Conference} on {Utility} and {Cloud} {Computing}, {UCC} 2014},
	author = {Hahn, Michael and Sáez, Santiago Gómez and Andrikopoulos, Vasilios and Karastoyanova, Dimka and Leymann, Frank},
	year = {2014},
	keywords = {Cloud middleware, Multi-tenancy, PaaS, Performance Evaluation},
	pages = {278--287}
}

@article{ristov_openstack_2013,
	title = {{OpenStack} {Cloud} {Security} {Vulnerabilities} from {Inside} and {Outside}},
	doi = {10.1145/2490257.2490285},
	abstract = {As usage of cloud computing increases, customers are mainly concerned about choosing cloud infrastructure with sufficient security. Concerns are greater in the multi-tenant environment on a public cloud. This paper addresses the security assessment of OpenStack open source cloud so-lution and virtual machine instances with different operating systems hosted in the cloud. The methodology and realized experiments target vulnerabilities from both inside and outside the cloud. We tested four different platforms and analyzed the security assessment. The main conclusions of the realized experiments show that multi-tenant environment raises new security challenges, there are more vulnerabilities from inside than outside and that Linux based Ubuntu, CentOS and Fedora are less vulnerable than Windows. We discuss details about these vulnerabilities and show how they can be solved by appropriate patches and other solutions.},
	number = {c},
	journal = {CLOUD COMPUTING 2013 : The Fourth International Conference on Cloud Computing, GRIDs, and Virtualization OpenStack},
	author = {Ristov, Sasko and Gusev, Marjan and Donevski, Aleksandar},
	year = {2013},
	keywords = {- cloud computing, security assessment, virtualiza-},
	pages = {101--107}
}

@article{albaroodi_critical_2013,
	title = {Critical review of openstack security: {Issues} and weaknesses},
	volume = {10},
	issn = {15493636},
	doi = {10.3844/jcssp.2014.23.33},
	abstract = {The purpose of this study is to examine the state of both cloud computing security in general and OpenStack in particular. Conducting a reassessment of cloud computing security can provide a greater understanding of how cloud computing functions and what types of security issues arise therein. This study is divided into two parts; in the first part, the background of cloud computing and its different deployment models are discussed. This section also describes various security challenges that affect organizations' decisions to adopt cloud computing. In the second part, an overview of the security issues in OpenStack is presented. © 2014 Science Publications.},
	number = {1},
	journal = {Journal of Computer Science},
	author = {Albaroodi, Hala and Manickam, Selvakumar and Singh, Parminder},
	year = {2013},
	keywords = {Cloud computing, Infrastructureas a services (IaaS), Openstack, Platform as a services (PaaS), Security, Software as a services (SaaS)},
	pages = {23--33}
}

@article{azab_migrate:_2016,
	title = {{MIGRATE}: {Towards} a {Lightweight} {Moving}-{Target} {Defense} {Against} {Cloud} {Side}-{Channels}},
	doi = {10.1109/SPW.2016.28},
	abstract = {© 2016 IEEE. Recent research has demonstrated the severity of co-residency side-channel attacks on computing clouds. These attacks have been successfully employed by malicious tenants to extract sensitive private information from selected neighboring tenants. Solutions towards addressing such attacks have presented customized solutions for specific variants of these attacks that often require significant modifications to the hardware, client virtual machines (VM), or hypervisors. These solutions are not generic and will not succeed with mutating versions of these attacks. Except for the impractical, resource inefficient, and costly single tenant solutions, co-residency will always be an issue to cloud service providers. In this paper, inspired from the camouflaging process of the sea chameleons evading predators, we present MIGRATE. MIGRATE is a container management framework that employs resource-efficient, scalable, real-time moving target defense to obfuscate the container execution behavior complicating the attacker's task to locate their targets. MIGRATE, offers generic defense against side-channel attacks and employs efficient real-time probabilistic random migrations of cloud tenants' applications contained in Linux containers between different hosts. To minimize the probability of attacker-victim co-residency on the same host. Eliminating the stable co-residency issue eliminates most of the side-channel attacks that face such a platform. Given the current implementation of MIGRATE tested on VMware V-Sphere Cloud, results showed that it can induce high frequency migrations with almost no effect on the enclosed applications making it suitable for mission-critical applications and as a mitigation against fast side-channel attacks.},
	journal = {Proceedings - 2016 IEEE Symposium on Security and Privacy Workshops, SPW 2016},
	author = {Azab, Mohamed and Eltoweissy, Mohamed},
	year = {2016},
	keywords = {Cloud computing, Cross-VM side-channel attacks, Linux containers, VM migration},
	pages = {96--103}
}

@inproceedings{ristenpart_hey_2009,
	title = {Hey, you, get off of my cloud: exploring information leakage in third-party compute clouds},
	isbn = {978-1-60558-894-0},
	shorttitle = {Hey, you, get off of my cloud},
	url = {http://dl.acm.org/citation.cfm?id=1653662.1653687},
	doi = {10.1145/1653662.1653687},
	urldate = {2019-04-25},
	publisher = {ACM},
	author = {Ristenpart, Thomas and Tromer, Eran and Shacham, Hovav and Savage, Stefan},
	month = nov,
	year = {2009},
	pages = {199--212},
	file = {Full Text PDF:/Users/sps5394/Zotero/storage/C5MATGUT/Ristenpart et al. - 2009 - Hey, you, get off of my cloud exploring informati.pdf:application/pdf;Snapshot:/Users/sps5394/Zotero/storage/LM2V62RF/citation.html:text/html}
}
